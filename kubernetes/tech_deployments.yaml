#Deployment do grafana
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
        - 0    
      containers:
        - name: grafana
          image: grafana/grafana:7.5.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          envFrom:
          - secretRef:
              name: secret-grafana

          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2

          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            
            tcpSocket:
              port: 3000
            timeoutSeconds: 1

---

#Deployment do prometheus
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  labels:
    app: prometheus-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-server
  template:
    metadata:
      labels:
        app: prometheus-server
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus/
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: prometheus-server-conf
  
        - name: prometheus-storage-volume
          emptyDir: {}
---

#Deployment do kube state metrics
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/version: v1.8.0
  name: kube-state-metrics
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-state-metrics
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/version: v1.8.0
    spec:
      containers:
      - image: quay.io/coreos/kube-state-metrics:v1.8.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        name: kube-state-metrics
        ports:
        - containerPort: 8080
          name: http-metrics
        - containerPort: 8081
          name: telemetry
        readinessProbe:
          httpGet:
            path: /
            port: 8081
          initialDelaySeconds: 5
          timeoutSeconds: 5
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: kube-state-metrics
---

#Deployments do alertManager
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      name: alertmanager
      labels:
        app: alertmanager
    spec:
      containers:
      - name: alertmanager
        image: prom/alertmanager:v0.19.0
        args:
          - "--config.file=/etc/alertmanager/config.yml"
          - "--storage.path=/alertmanager"
        ports:
        - name: alertmanager
          containerPort: 9093
        volumeMounts:
        - name: config-volume
          mountPath: /etc/alertmanager
        - name: templates-volume
          mountPath: /etc/alertmanager-templates
        - name: alertmanager
          mountPath: /alertmanager
      volumes:
      - name: config-volume
        configMap:
          name: alertmanager-config
      - name: templates-volume
        configMap:
          name: alertmanager-templates
      - name: alertmanager
        emptyDir: {}
---
#deployments da aplicação de clientes
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-clientes-deployment
  labels:
    app: api-clientes
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-clientes
  template:
    metadata:
      labels:
        app: api-clientes
    spec:
      containers:
      - name: api-clientes-container
        image: douglasrocha06/clientes
        ports:
          - containerPort: 5100
        envFrom:
          - configMapRef:
              name: configmap-clientes
---

#deployments enderecos
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-enderecos-deployment
  labels:
    app: api-enderecos
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-enderecos
  template:
    metadata:
      labels:
        app: api-enderecos
    spec:
      containers:
      - name: api-enderecos-container
        image: douglasrocha06/enderecos
        ports:
          - containerPort: 5200
        envFrom:
          - configMapRef:
              name: configmap-enderecos
---

#deployments catalogo
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-catalogo-deployment
  labels:
    app: api-catalogo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-catalogo
  template:
    metadata:
      labels:
        app: api-catalogo
    spec:
      containers:
      - name: api-clientes-catalogo
        image: douglasrocha06/catalogo
        ports:
          - containerPort: 5300
        envFrom:
          - configMapRef:
              name: configmap-catalogo
---

#deployments inventario
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-inventario-deployment
  labels:
    app: api-inventario
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-inventario
  template:
    metadata:
      labels:
        app: api-inventario
    spec:
      containers:
      - name: api-inventario-container
        image: douglasrocha06/inventario
        ports:
          - containerPort: 5400
        envFrom:
          - configMapRef:
              name: configmap-inventario